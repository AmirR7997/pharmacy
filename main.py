from telebot import TeleBot
from telebot.types import KeyboardButton, ReplyKeyboardMarkup
import sqlite3

from constant import create_new_user_query
from utils import set_integer_flag, check_illnes, check_recipy, update_user_filed, get_integer_flag, MenuStack

TOKEN = '5901370716:AAHAdCqATJZ6WSQRUm4buzP-fivEBdkYLuU'

bot = TeleBot(TOKEN, parse_mode=None)


def main_menu_keyboard():
    markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)

    ilness = KeyboardButton("–ß–µ–º –≤—ã –±–æ–ª–µ–µ—Ç–µ?üò∑")
    recipy = KeyboardButton("–ö–∞–∫–æ–π —Ä–µ—Ü–µ–ø—Ç –≤–∞–º –≤—ã–ø–∏—Å–∞–ª–∏?üìù")
    rep = KeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—èüìù")

    markup.add(ilness)
    markup.add(recipy, rep)


    return markup

def menu_of_illnesses():
    markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)

    button1 = KeyboardButton('–ü—Ä–æ—Å—Ç—É–¥–∞')
    button2 = KeyboardButton('–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å')
    button3 = KeyboardButton('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞')
    button4 = KeyboardButton('–õ–∏—Ö–æ—Ä–∞–¥–∫–∞')
    button5 = KeyboardButton('–í–µ—Ç—Ä—è–Ω–∫–∞')
    button6 = KeyboardButton('–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å')
    button7 = KeyboardButton('–†–≤–æ—Ç–∞')
    button8 = KeyboardButton('–û—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ')
    button9 = KeyboardButton('–ü–æ–Ω–æ—Å')

    markup.add(button1, button3, button4)
    markup.add(button2, button5, button6)
    markup.add(button7, button8, button9)

    return markup

stack = MenuStack(main_menu_keyboard())
@bot.message_handler(func=lambda message: message.text == "–ß–µ–º –≤—ã –±–æ–ª–µ–µ—Ç–µ?üò∑")
def update_ilness(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ: ", reply_markup=menu_of_illnesses())

@bot.message_handler(func=lambda message: message.text == "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–µ—Ü–µ–ø—Ç")
def update_recipy(message):
    chat_id = message.chat.id
    if not check_recipy(chat_id):
        set_integer_flag(1, 'recipy_being_entered', 'user', chat_id)
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –≤—ã–ø–∏—Å–∞–ª–∏: ")

@bot.message_handler(commands=["start"])
def start_handler(message):
    chat_id = message.chat.id

    create_user(chat_id)

    reply = f"Welcome to your health supporter{message.from_user.first_name} "
    bot.reply_to(message, reply, reply_markup=get_user_details_keyboard(chat_id))
    print(f'Name_of_user - {message.from_user.first_name}')
    print(f'Username_of_user - @{message.from_user.username}')
    print(f'ID_user - {message.from_user.id}')

def check_illnes_if_yes_update(chat_id, message):
    if get_integer_flag(column_name='illnes_being_entered',
                        table_name='user',
                        chat_id=chat_id) == 1:
        update_user_filed(chat_id, 'illnes', int(message.text))
        set_integer_flag(0, 'illnes_being_entered', 'user', chat_id)
        bot.send_message(chat_id, "–ú—ã –ø–æ–Ω—è–ª–∏ –≤–∞—à–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ.", reply_markup=get_user_details_keyboard(chat_id))

def check_recipy_if_yes_update(chat_id, message):
    if get_integer_flag(column_name='recipy_being_entered',
                        table_name='user',
                        chat_id=chat_id) == 1:

        update_user_filed(chat_id, 'recipy', message.text)
        set_integer_flag(0, 'recipy_being_entered', 'user', chat_id)
        bot.send_message(chat_id, "–í–∞—à —Ä–µ—Ü–µ–ø—Ç –ø—Ä–∏–Ω—è—Ç.", reply_markup=get_user_details_keyboard(chat_id))

def get_user_details_keyboard(chat_id):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    illnes_exist = False
    recipy_exist = False
    if not check_illnes(chat_id):
        get_illnes = KeyboardButton("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ: ")
        markup.add(get_illnes)
    else:
        illnes_exist = True
    if not check_recipy(chat_id):
        get_address_button = KeyboardButton("–í–≤–µ–¥–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –≤—ã–ø–∏—Å–∞–ª–∏: ")
        markup.add(get_address_button)
    else:
        recipy_exist = True
    if illnes_exist or recipy_exist:
        markup = main_menu_keyboard()
    return markup

def create_user(chat_id):
    try:
        conn = sqlite3.connect('pharmacy_db')
        cursor = conn.cursor()
        sql = create_new_user_query(chat_id)
        cursor.execute(sql)
        conn.commit()
    except Exception as e:
        print(e)

@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥‚¨ÖÔ∏è")
def back_handler(message):
    stack.pop()
    menu_to_go_back = stack.top()
    bot.send_message(message.chat.id, "–ü—Ä–æ—à–ª–æ–µ –º–µ–Ω—é: ", reply_markup=menu_to_go_back)
    set_integer_flag(0, "quantity_being_entered", "user", message.chat.id)




@bot.message_handler(content_types=['text' , 'contact' , 'location'])
def message_handler(message):

    chat_id = message.chat.id
    create_user(chat_id)
    check_illnes_if_yes_update(chat_id, message)
    check_recipy_if_yes_update(chat_id, message)


    if message.text == "–ü—Ä–æ—Å—Ç—É–¥–∞":
        bot.reply_to(message, "–°–æ–≤–µ—Ç—É–µ–º –≤–∞–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–µ–ø–∞—Ä–∞—Ç –∞—Ä–±–∏–¥–æ–ª (–ü—Ä–µ–ø–∞—Ä–∞—Ç –ø—Ä–∏–Ω–∏–º–∞—é—Ç –≤–Ω—É—Ç—Ä—å, –¥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏. –í –ø–µ—Ä–∏–æ–¥ —ç–ø–∏–¥–µ–º–∏–∏ –≥—Ä–∏–ø–ø–∞ –∏ –¥—Ä—É–≥–∏—Ö –û–†–í–ò: –¥–µ—Ç—è–º –æ—Ç 6 –¥–æ 12 –ª–µ—Ç - 100 –º–≥, –¥–µ—Ç—è–º —Å—Ç–∞—Ä—à–µ 12 –ª–µ—Ç –∏ –≤–∑—Ä–æ—Å–ª—ã–º - 200 –º–≥ 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –Ω–µ–¥–µ–ª—å.) –∏ —Ä–∞–∑–≤–æ–¥–∏—Ç—å –¢–µ—Ä–∞—Ñ–ª—é –ø–µ—Ä–µ–¥ —Å–Ω–æ–º!")
    '''if message.text == "–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å":
        bot.reply_to((message))'''

bot.infinity_polling()

